/*------------------------------------*\
    ::Mixins
    ----------------------------------*
    ::Placeholder Color
    ::@Font Face Shortener
    ::Media Queries
    ::Changing grid-column to col
    ::Sticky Footer
    ::Nav
\*------------------------------------*/

/*------------------------------------*\
    ::Placeholder Color
\*------------------------------------*/
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

/*------------------------------------*\
    ::@Font Face Shortener
\*------------------------------------*/
//Usage:
//Descript:

@mixin font-face($fam, $file-path, $weight: normal, $style: normal, $asset-pipeline: false ) {
  @font-face {
    font-family: $fam;
    font-weight: $weight;
    font-style: $style;

    @if $asset-pipeline == true {
      src: font-url('fonts/#{$file-path}.eot');
      src: font-url('fonts/#{$file-path}.eot?#iefix')          format('embedded-opentype'),
           font-url('fonts/#{$file-path}.woff')                format('woff'),
           font-url('fonts/#{$file-path}.ttf')                 format('truetype'),
           font-url('fonts/#{$file-path}.svg##{$fam}') format('svg');
    } @else {
      src: url('fonts/#{$file-path}.eot');
      src: url('fonts/#{$file-path}.eot?#iefix')               format('embedded-opentype'),
           url('fonts/#{$file-path}.woff')                     format('woff'),
           url('fonts/#{$file-path}.ttf')                      format('truetype'),
           url('fonts/#{$file-path}.svg##{$fam}')      format('svg');
    }
  }
}

/*------------------------------------*\
    ::Media Queries
\*------------------------------------*/
//Usage:
// @include bp($max: 600px){ body { background:#000 } }
// @include bp($min: 600px){ body { background:#fff } }
// @include bp($min: 600px, $max: 600px){ body { background:#000 } }
// @include bp($planetary){ body { background:#fff } }

@mixin bp($media: false, $min: false, $max: false) {
    @if $media {
        @media only screen and (max-width: $media) { @content; }
    }
    @else if $min and $max {
        @media only screen and (min-width: $min) and (max-width: $max) { @content; }
    }
    @else if $min {
        @media only screen and (min-width: $min) { @content; }
    }
    @else if $max {
        @media only screen and (max-width: $max) { @content; }
    }

}

/*------------------------------------*\
    ::Changing grid-column to col
\*------------------------------------*/

//Just @include col(x);
@mixin col($columns, $last-column:false, $center:false, $offset:false, $push:false, $pull:false, $collapse:false, $float:left) {
    @include grid-column($columns, $last-column, $center, $offset, $push, $pull, $collapse, $float);
}

/*------------------------------------*\
    ::Sticky Footer
\*------------------------------------*/

// Use this mixin to make the footer sticky.
// Just add the following line somewhere in your stylesheet:
//
//      @include sticky-footer($footer-height:200px);
//
// See the following site for more info on the CSS:
// http://css-tricks.com/snippets/css/sticky-footer/

@mixin sticky-footer(
    $footer-height: 200px,
    $wrap-element: '.wrap',
    $container-element: '.wrap',
    $footer-element: '.footer',
    $footer-inner-element: '.footer .inner'
    ) {

    html, body, #{$wrap-element} {
        height: 100%;
    }
    #{$wrap-element} {
        height: auto; min-height: 100%;
    }
    #{$container-element} {
        padding-bottom: $footer-height;
        display: inline-block;
    }
    #{$footer-element} {
        position: relative;
        height: $footer-height;
        margin-top: -1 * $footer-height; //negative value of footer height
        clear:both;
    }
    @if ($footer-inner-element != '') {
        #{$footer-inner-element} {
            height: 100%;
        }
    }
    //clear fix
    #{$container-element}:after {content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
    //hides from IE-mac
    * html #{$container-element} {
        height: 1%;
    }
    #{$container-element} {
        display: block;
    }//end hide from IE-mac
}

/*------------------------------------*\
    ::Navigation
\*------------------------------------*/

// Use this mixin to add basic nav styling.
// Just add the following code within your styles.
//
//
//      @include nav(
//          $type: 'dropdown',          //nav type: dropdown or nested
//          $nav-container: '.nav',     //.nav by default
//          $fade: .3s,                 //fade speed (take out for no animation)
//          $easy-hover: 50px,          //amount of invisible overflow for sub menu (take out to not use)
//          $easy-hover-top: 0          //set top easy-hover value (you can also set $easy-hover-right, -bottom, and -left separately)
//      );

@mixin nav(
    $type: 'dropdown',
    $nav-container: '.nav',
    $fade: false,
    $easy-hover: false,
    $easy-hover-top: false,
    $easy-hover-right: false,
    $easy-hover-bottom: false,
    $easy-hover-left: false
){
    @if $type == dropdown {
        #{$nav-container} {
            position: relative;
            z-index: 10;
            ul {
                li {
                    display: block;
                    float: left;
                    list-style: none;
                }
                ul {
                    visibility: hidden;
                    padding: 0;
                    @if $fade {
                        @include transition-property(#{opacity, visibility, background-color});
                        @include transition-duration(#{$fade, 0s});
                        @include transition-delay(#{0s, $fade});
                    }
                    @if $easy-hover {
                        &:after {
                            content: "";
                            position: absolute;
                            @if $easy-hover-top {
                                top: -1 * $easy-hover-top;
                            } @else {
                                top: -1 * $easy-hover;
                            }
                            @if $easy-hover-bottom {
                                bottom:  -1 * $easy-hover-bottom;
                            } @else {
                                bottom:  -1 * $easy-hover;
                            }
                            @if $easy-hover-left {
                                left:  -1 * $easy-hover-left;
                            } @else {
                                left:  -1 * $easy-hover;
                            }
                            @if $easy-hover-right {
                                right:  -1 * $easy-hover-right;
                            } @else {
                                right:  -1 * $easy-hover;
                            }
                            background-color: #000;
                            opacity: 0;
                            z-index: -1;
                        }
                    }
                }
            }
            //local nav
            li {
                ul {
                    display: block;
                    position: absolute;
                    opacity: 0;
                }
                &:hover {
                    ul {
                        opacity: 1;
                        visibility: visible;
                        @if $fade {
                            -webkit-transition-delay: 0s, 0s;
                            -moz-transition-delay: 0s, 0s;
                            -o-transition-delay: 0s, 0s;
                            transition-delay: 0s, 0s;
                        }
                    }
                }
            }
        }
    }
    @if $type == 'nested' {
        #{$nav-container} {
            li {
                float: left;
                list-style: none;
                ul {
                    padding: 0;
                }
                li {
                    clear: both;
                }
                a {
                    display: block;
                    text-decoration: none;
                }
            }
            //global nav
            ul {
                //local nav
                ul {
                    padding:0;
                    li {
                        float: left;
                        clear: both;
                    }
                }
            }
        }
    }
}